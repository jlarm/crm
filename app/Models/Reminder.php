<?php

declare(strict_types=1);

namespace App\Models;

use App\Enum\ReminderFrequency;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Spatie\Activitylog\LogOptions;
use Spatie\Activitylog\Traits\LogsActivity;

class Reminder extends Model
{
    use LogsActivity;

    protected $fillable = [
        'user_id',
        'dev_rel',
        'title',
        'message',
        'start_date',
        'last_sent',
        'sending_frequency',
        'pause',
    ];

    protected $casts = [
        'dev_rel' => 'boolean',
        'last_sent' => 'date',
        'sending_frequency' => ReminderFrequency::class,
    ];

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function getActivitylogOptions(): LogOptions
    {
        return LogOptions::defaults()
            ->logAll()
            ->setDescriptionForEvent(fn (string $eventName): string => "Reminder {$eventName}");
    }

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub

        static::creating(function ($reminder): void {
            if (! $reminder->user_id) {
                $reminder->user_id = auth()->id();
            }
        });
    }
}
